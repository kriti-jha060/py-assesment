
$$$$$$$$$$$$$$$$    set 1 $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


####### creating database
import mysql.connector

db1=mysql.connector.connect(host="localhost" ,username="root",password="root" )
mycursor=db1.cursor()
sql1='CREATE database dbconnect1 '
mycursor.execute(sql1)

###creating table in mysql in database


mysql> use dbconnect1;
Database changed
mysql> create  table sale (id int, bill_date DATE, product_id int, product_quantity int);
Query OK, 0 rows affected (0.71 sec)

mysql> create  table product (id int, product_name varchar(25), product_code varchar(25), price int) ;

######insert into product table from csv

import csv
import mysql.connector
try:

    db1=mysql.connector.connect(host="localhost" ,username="root",password="root",database="dbconnect1" )
    mycursor=db1.cursor()
    file=open("product.csv","r")
    data=csv.reader(file)
    for i in data:
        print(i)
        mycursor.execute("insert into product (id,product_name,product_code, price) values (%s,%s,%s,%s)",i)


        db1.commit()
except:
    print("connectivity not possible")
    db1.rollback()
finally:
    db1.close()

#####insert into sale table from csv

import csv
import mysql.connector
try:

    db1=mysql.connector.connect(host="localhost" ,username="root",password="root",database="dbconnect1" )
    mycursor=db1.cursor()
    file=open("product.csv","r")
    data=csv.reader(file)
    for i in data:
        print(i)
        mycursor.execute("insert into product (id,product_name,product_code, price) values (%s,%s,%s,%s)",i)


        db1.commit()
except:
    print("connectivity not possible")
    db1.rollback()
finally:
    db1.close()

##### Q1 

import logging
import mysql.connector
try:

    db1=mysql.connector.connect(host="localhost" ,username="root",password="root",database="dbconnect1" )
    mycursor = db1.cursor()
    logging.basicConfig(filename="logfile.txt",
                        filemode='a',
                        format='%(asctime)s - %(message)s',
                        datefmt='%H:%M:%S',
                        level=logging.INFO)

    logging.info("Print minimum - sold product with product details")

    mycursor.execute("select product_name,product_code,price from(select product_name,product_code,price,RANK () over(order by product_quantity)r from product p inner join sale s on p.id=s.id)d where r=1")
    results=mycursor.fetchall()
    print(results)
    db1.commit()
except:
    print("connectivity not possible")
    db1.rollback()
finally:
    db1.close()

o/p:
[('JBL Speakers', 'JBL-100', 18600)]


#### Q2


import mysql.connector
import logging

try:

    db1 = mysql.connector.connect(host="localhost", username="root", password="root", database="dbconnect1")
    mycursor = db1.cursor()
    logging.basicConfig(filename="logfile.txt",
                        filemode='a',
                        format='%(asctime)s - %(message)s',
                        datefmt='%H:%M:%S',
                        level=logging.INFO)

    logging.info("Print maximum - sold product with product details")

    mycursor.execute(
        "select product_name,product_code,price from(select product_name,product_code,price,RANK () over(order by product_quantity desc)r from product p inner join sale s on p.id=s.id)d where r=1;")
    results = mycursor.fetchall()
    print(results)
    db1.commit()
except:
    print("connectivity not possible")
    db1.rollback()
finally:
    db1.close()



o/p:

[('YAMAHA Speakers', 'YHT-1840', 26500)]



##### Q3

import mysql.connector
import logging

print("enter the date to check (yyyy-mm-dd):")
billing_date = input()

try:

    db1 = mysql.connector.connect(host="localhost", username="root", password="root", database="dbconnect1")
    mycursor = db1.cursor()
    logging.basicConfig(filename="logfile.txt",
                        filemode='a',
                        format='%(asctime)s - %(message)s',
                        datefmt='%H:%M:%S',
                        level=logging.INFO)

    logging.info("Get the billing date from user and print the product details and total amount of displaying products")

    mycursor.execute(
        "select product_name,product_code,price from product p inner join sale s on p.id=s.id where bill_date=%s",
        (billing_date,))
    results = mycursor.fetchall()
    if len(results) == 0:
        print("data not in table")
    else:

        print(results)

    # print(results)
    db1.commit()
except:
    print("connectivity not possible")
    db1.rollback()
finally:
    db1.close()

o/p:
enter the date to check (yyyy-mm-dd):
2019-04-05

data not in table


##### Q4

import mysql.connector
print("enter the product code to check:")
code = input()

try:

    db1=mysql.connector.connect(host="localhost" ,username="root",password="root",database="dbconnect1" )
    mycursor=db1.cursor()
    mycursor.execute("select product_name,product_code,price from product where product_code=%s",(code,))
    
    results=mycursor.fetchall()
    if len(results)==0:
        print("data not in table")
    else:

        print(results)
    
    db1.commit()
except:
    print("connectivity not possible")
    db1.rollback()
finally:
    db1.close()


O/P:

enter the product code to check:
YHT-1840
[('YAMAHA Speakers', 'YHT-1840', 26500)]


#### Q5

import mysql.connector

try:

    db1=mysql.connector.connect(host="localhost" ,username="root",password="root",database="dbconnect1" )
    mycursor=db1.cursor()
    mycursor.execute("insert into product values(4,'sony speakers','SONY-123',20000),(5,'jbl headphones','jbl-223',5000)")




    db1.commit()
except:
    print("connectivity not possible")
    db1.rollback()
finally:
    db1.close()
    
    
    
################## try and except #############


def try_except():
    
    try:
        
        x = int(input("Please enter a number: "))
        print("Dividing 50 by", x,"will give you :", 50/x)
    except ValueError:
        print("The input was not an integer. Please try again...")
    except ZeroDivisionError:
        print("The divisor cannot be zero")

def err(i):
    try:
    
        a=[1,2,3,4,5,8,10]
        print("number at index",i,"is ",a[i])
    except IndexError:
        print("index out of range")
        
def draw(y):
    try:
        z=int(y)
        li=[1,50,45,43,78,56]
        for j in li:
            if y==j:
                print("Lucky draw!!")
                break
            else:
                print("unlucky!!")
                break
    except:
        print("you have to print positive integers!!")

while True:
    print("enter index number to get value :")
    x=int(input())
    err(x)
    print("enter number to check lucky draw")
    y=input()
    draw(y)
    print("print 'T' to execute and 'F' to stop :")
    keep_asking = input()
    if keep_asking=='T':
        
        try_except()
    else:
        exit()
        
   o/p:
   enter index number to get value :                                                                                       
9                                                                                                                       
index out of range                                                                                                      
enter number to check lucky draw                                                                                        
4                                                                                                                       
unlucky!!                                                                                                               
print 'T' to execute and 'F' to stop :                                                                                  
T                                                                                                                       
Please enter a number: 0                                                                                                
The divisor cannot be zero                                                                                              
enter index number to get value :                                                                                       
5                                                                                                                       
number at index 5 is  8                                                                                                 
enter number to check lucky draw                                                                                        
76                                                                                                                      
unlucky!!                                                                                                               
print 'T' to execute and 'F' to stop :                                                                                  
T                                                                                                                       
Please enter a number: 5.5                                                                                              
The input was not an integer. Please try again...                                                                       
enter index number to get value :                                                                                       
1                                                                                                                       
number at index 1 is  2                                                                                                 
enter number to check lucky draw
55                                                                                                                      
unlucky!!                                                                                                               
print 'T' to execute and 'F' to stop :                                                                                  
f  




