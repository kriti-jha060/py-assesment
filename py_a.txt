
## 5 objects
	class point:
    _count = 0
    def __new__(cls, *args, **kwargs):
        cls._count += 1
        if cls._count > 5:
            raise TypeError("more than 5 objects are created")
    def __init__(self):
        self.__cname = 'points'
p1 = point()
p2 = point()
p3 = point()
p4 = point()
p5 = point()
p6 = point()





## distance from origin

	class Point:
    def __init__(self, x=0, y=0):
        self.x = x
        self.y = y
    def distance_origin(self):
        return ((self.x ** 2) + (self.y ** 2)) ** 0.5
p1 = Point(4,5)
print("Distance from the origin "+str(p1.distance_origin()))

output:Distance from the origin 6.4031242374328485



## distance between two points

import math
class Point:
    def __init__(self, x=0, y=0):
        self.x = x
        self.y = y
    def distance_two(self,p2):
        return math.sqrt(((p2.x- self.x) ** 2) + ((p2.y-self.y) ** 2))

    
p1 = Point(4,5)
p2=Point(7,9)
m = p1.distance_two(p2)
print("Distance betweeen two points "+ str(m))

output:Distance betweeen two points 5.0

## midpoint

import math
class Point:
    def __init__(self, x=0, y=0):
        self.x = x
        self.y = y
    
    def midpoint(self,p1, p2):
        mx = (p1.x + p2.x) / 2
        my = (p1.y + p2.y) / 2
        return Point(mx, my)

    
p1 = Point(4,5)
p2=Point(7,9)

a= Point()
b=a.midpoint(p1,p2)
print("Midpoint of 2 points is "+ "("+str(b.x)+"," +str(b.y)+")")

output:

Midpoint of 2 points is (5.5,7.0) 
